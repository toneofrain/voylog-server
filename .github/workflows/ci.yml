name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/**'

  workflow_dispatch:

jobs:
  setup:
    name: set up for test and build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - run: |
          chmod +x gradlew
          ./gradlew dependencies

      - uses: actions/upload-artifact@v3
        with:
          name: files
          path: ./

  test:
    name: test
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: files

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: run test
        id: run-test
        run: |
          chmod +x gradlew
          ./gradlew test --no-daemon

      - name: upload test report
        if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/test-results/test/**.xml


  build:
    name: build bootjar
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      jar-file: ${{ steps.publish.outputs.jar-file }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: files

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: run bootjar
        run: |
          chmod +x gradlew
          ./gradlew bootjar -x test --no-daemon

      - name: publish jar name
        id: publish
        run: find build/libs/*.jar -type f -execdir echo 'jar-file={}' >> $GITHUB_OUTPUT ';'

      - name: upload jar
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: build/libs/*.jar

  docker:
    name: build docker image
    needs: [ test, build ]
    runs-on: ubuntu-latest

    steps:
      - name: down load jar file
        uses: actions/download-artifact@v3
        with:
          name: jar-file

      - run: ls

      - run: echo ${{ needs.build.outputs.jar-file }}
